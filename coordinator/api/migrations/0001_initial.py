# Generated by Django 2.0.4 on 2018-04-19 18:54

import coordinator.api.models
import coordinator.api.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('kf_id', models.CharField(default=coordinator.api.models.task_id, max_length=11, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='UUID used internally')),
                ('event_type', models.CharField(choices=[('info', 'info'), ('warning', 'warning'), ('error', 'error')], default='info', help_text='The type of event', max_length=20)),
                ('message', models.CharField(help_text='The message describing the event', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time the event was created')),
            ],
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('kf_id', models.CharField(default=coordinator.api.models.release_id, help_text='Kids First ID assigned to the release', max_length=11, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='UUID used internally')),
                ('author', models.CharField(default='admin', help_text='The user who created the release', max_length=100)),
                ('name', models.CharField(help_text='Name of the release', max_length=100)),
                ('description', models.CharField(blank=True, help_text='Release notes', max_length=500)),
                ('state', models.CharField(choices=[('pending', 'pending'), ('waiting', 'waiting'), ('running', 'running'), ('staged', 'staged'), ('publishing', 'publishing'), ('published', 'published'), ('failed', 'failed'), ('canceled', 'canceled')], default='waiting', help_text='The current state of the release', max_length=100)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50), blank=True, default=[], help_text='Tags to group the release by', size=None)),
                ('studies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=11), help_text='kf_ids of the studies in this release', size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date created')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('kf_id', models.CharField(default=coordinator.api.models.task_id, max_length=11, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='UUID used internally')),
                ('state', models.CharField(choices=[('pending', 'pending'), ('waiting', 'waiting'), ('running', 'running'), ('staged', 'staged'), ('publishing', 'publishing'), ('published', 'published'), ('failed', 'failed'), ('canceled', 'canceled')], default='waiting', help_text='The current state of the task', max_length=100)),
                ('progress', models.IntegerField(default=0, help_text='Optional field representing what percentage of the task has been completed')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time the task was created')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='api.Release')),
            ],
        ),
        migrations.CreateModel(
            name='TaskService',
            fields=[
                ('kf_id', models.CharField(default=coordinator.api.models.task_service_id, help_text='Kids First ID assigned to the service', max_length=11, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='UUID used internally')),
                ('name', models.CharField(help_text='The name of the service', max_length=100)),
                ('description', models.CharField(help_text="Description of the service'sfunction", max_length=500)),
                ('url', models.CharField(help_text="endpoint for the task's API", max_length=200, validators=[coordinator.api.validators.validate_endpoint])),
                ('last_ok_status', models.IntegerField(default=0, help_text="number of pings since last 200 response from the task's  /status endpoint")),
                ('enabled', models.BooleanField(default=True, help_text='Whether to run the task as part of a release.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time the task was created')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='task_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='api.TaskService'),
        ),
        migrations.AddField(
            model_name='event',
            name='release',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='api.Release'),
        ),
        migrations.AddField(
            model_name='event',
            name='task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='api.Task'),
        ),
        migrations.AddField(
            model_name='event',
            name='task_service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='api.TaskService'),
        ),
    ]
